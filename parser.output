Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: Start

    2 Start: StmtList

    3 StmtList: Stmt StmtList
    4         | ε

    5 Stmt: Decl SEMICOLON
    6     | Assi SEMICOLON
    7     | IfStmt
    8     | LoopStmt

    9 Decl: INT IDENT
   10     | FLOAT IDENT
   11     | BOOLEAN IDENT
   12     | CHAR IDENT

   13 Assi: IDENT EQUAL Expr
   14     | IDENT INC
   15     | IDENT DEC
   16     | IDENT PLUS_EQUAL Expr
   17     | IDENT MINUS_EQUAL Expr
   18     | IDENT MULTIPLY_EQUAL Expr
   19     | IDENT DIVIDE_EQUAL Expr
   20     | IDENT MODULO_EQUAL Expr

   21 Expr: Expr PLUS Term
   22     | Expr MINUS Term
   23     | Term

   24 Term: Term MULTIPLY Factor
   25     | Term DIVIDE Factor
   26     | Term MODULO Factor
   27     | Factor

   28 Factor: OPEN_PARENTHESIS Expr CLOSE_PARENTHESIS
   29       | IDENT
   30       | INT_LITERAL
   31       | FLOAT_LITERAL
   32       | CHAR_LITERAL
   33       | TRUE
   34       | FALSE
   35       | IDENT INC
   36       | IDENT DEC
   37       | INC IDENT
   38       | DEC IDENT

   39 CondExpr: Expr RelOp Expr
   40         | NOT Expr
   41         | Expr AND Expr
   42         | Expr OR Expr
   43         | OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS

   44 RelOp: EQUAL
   45      | IS_EQUAL
   46      | NOT_EQUAL
   47      | GREATER_THAN
   48      | LESSER_THAN
   49      | EQUAL_GREATER
   50      | EQUAL_LESSER

   51 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS
   52       | IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON CondExpr SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS
   54         | WHILE OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    EQUAL_LESSER (258) 50
    GREATER_THAN (259) 47
    LESSER_THAN (260) 48
    EQUAL (261) 13 44
    IS_EQUAL (262) 45
    NOT (263) 40
    NOT_EQUAL (264) 46
    EQUAL_GREATER (265) 49
    PLUS (266) 21
    INC (267) 14 35 37
    PLUS_EQUAL (268) 16
    MINUS (269) 22
    DEC (270) 15 36 38
    MINUS_EQUAL (271) 17
    DIVIDE (272) 25
    DIVIDE_EQUAL (273) 19
    MULTIPLY (274) 24
    MULTIPLY_EQUAL (275) 18
    MODULO (276) 26
    MODULO_EQUAL (277) 20
    OPEN_PARENTHESIS (278) 28 43 51 52 53 54
    CLOSE_PARENTHESIS (279) 28 43 51 52 53 54
    OPEN_CURLY_BRACKETS (280) 51 52 53 54
    CLOSE_CURLY_BRACKETS (281) 51 52 53 54
    FLOAT_LITERAL (282) 31
    TRUE (283) 33
    FALSE (284) 34
    INT_LITERAL (285) 30
    CHAR_LITERAL (286) 32
    FLOAT (287) 10
    INT (288) 9
    CHAR (289) 12
    BOOLEAN (290) 11
    IF (291) 51 52
    ELSE (292) 52
    AND (293) 41
    OR (294) 42
    FOR (295) 53
    WHILE (296) 54
    IDENT (297) 9 10 11 12 13 14 15 16 17 18 19 20 29 35 36 37 38
    SEMICOLON (298) 5 6 53


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    PROGRAM (45)
        on left: 1
        on right: 0
    Start (46)
        on left: 2
        on right: 1
    StmtList (47)
        on left: 3 4
        on right: 2 3 51 52 53 54
    Stmt (48)
        on left: 5 6 7 8
        on right: 3
    Decl (49)
        on left: 9 10 11 12
        on right: 5
    Assi (50)
        on left: 13 14 15 16 17 18 19 20
        on right: 6 53
    Expr (51)
        on left: 21 22 23
        on right: 13 16 17 18 19 20 21 22 28 39 40 41 42
    Term (52)
        on left: 24 25 26 27
        on right: 21 22 23 24 25 26
    Factor (53)
        on left: 28 29 30 31 32 33 34 35 36 37 38
        on right: 24 25 26 27
    CondExpr (54)
        on left: 39 40 41 42 43
        on right: 43 51 52 53 54
    RelOp (55)
        on left: 44 45 46 47 48 49 50
        on right: 39
    IfStmt (56)
        on left: 51 52
        on right: 7
    LoopStmt (57)
        on left: 53 54
        on right: 8


State 0

    0 $accept: • PROGRAM $end

    FLOAT    shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    IF       shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IDENT    shift, and go to state 8

    $end  reduce using rule 4 (StmtList)

    PROGRAM   go to state 9
    Start     go to state 10
    StmtList  go to state 11
    Stmt      go to state 12
    Decl      go to state 13
    Assi      go to state 14
    IfStmt    go to state 15
    LoopStmt  go to state 16


State 1

   10 Decl: FLOAT • IDENT

    IDENT  shift, and go to state 17


State 2

    9 Decl: INT • IDENT

    IDENT  shift, and go to state 18


State 3

   12 Decl: CHAR • IDENT

    IDENT  shift, and go to state 19


State 4

   11 Decl: BOOLEAN • IDENT

    IDENT  shift, and go to state 20


State 5

   51 IfStmt: IF • OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS
   52       | IF • OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    OPEN_PARENTHESIS  shift, and go to state 21


State 6

   53 LoopStmt: FOR • OPEN_PARENTHESIS Assi SEMICOLON CondExpr SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    OPEN_PARENTHESIS  shift, and go to state 22


State 7

   54 LoopStmt: WHILE • OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    OPEN_PARENTHESIS  shift, and go to state 23


State 8

   13 Assi: IDENT • EQUAL Expr
   14     | IDENT • INC
   15     | IDENT • DEC
   16     | IDENT • PLUS_EQUAL Expr
   17     | IDENT • MINUS_EQUAL Expr
   18     | IDENT • MULTIPLY_EQUAL Expr
   19     | IDENT • DIVIDE_EQUAL Expr
   20     | IDENT • MODULO_EQUAL Expr

    EQUAL           shift, and go to state 24
    INC             shift, and go to state 25
    PLUS_EQUAL      shift, and go to state 26
    DEC             shift, and go to state 27
    MINUS_EQUAL     shift, and go to state 28
    DIVIDE_EQUAL    shift, and go to state 29
    MULTIPLY_EQUAL  shift, and go to state 30
    MODULO_EQUAL    shift, and go to state 31


State 9

    0 $accept: PROGRAM • $end

    $end  shift, and go to state 32


State 10

    1 PROGRAM: Start •

    $end  reduce using rule 1 (PROGRAM)


State 11

    2 Start: StmtList •

    $end  reduce using rule 2 (Start)


State 12

    3 StmtList: Stmt • StmtList

    FLOAT    shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    IF       shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IDENT    shift, and go to state 8

    $end                  reduce using rule 4 (StmtList)
    CLOSE_CURLY_BRACKETS  reduce using rule 4 (StmtList)

    StmtList  go to state 33
    Stmt      go to state 12
    Decl      go to state 13
    Assi      go to state 14
    IfStmt    go to state 15
    LoopStmt  go to state 16


State 13

    5 Stmt: Decl • SEMICOLON

    SEMICOLON  shift, and go to state 34


State 14

    6 Stmt: Assi • SEMICOLON

    SEMICOLON  shift, and go to state 35


State 15

    7 Stmt: IfStmt •

    $end                  reduce using rule 7 (Stmt)
    CLOSE_CURLY_BRACKETS  reduce using rule 7 (Stmt)
    FLOAT                 reduce using rule 7 (Stmt)
    INT                   reduce using rule 7 (Stmt)
    CHAR                  reduce using rule 7 (Stmt)
    BOOLEAN               reduce using rule 7 (Stmt)
    IF                    reduce using rule 7 (Stmt)
    FOR                   reduce using rule 7 (Stmt)
    WHILE                 reduce using rule 7 (Stmt)
    IDENT                 reduce using rule 7 (Stmt)


State 16

    8 Stmt: LoopStmt •

    $end                  reduce using rule 8 (Stmt)
    CLOSE_CURLY_BRACKETS  reduce using rule 8 (Stmt)
    FLOAT                 reduce using rule 8 (Stmt)
    INT                   reduce using rule 8 (Stmt)
    CHAR                  reduce using rule 8 (Stmt)
    BOOLEAN               reduce using rule 8 (Stmt)
    IF                    reduce using rule 8 (Stmt)
    FOR                   reduce using rule 8 (Stmt)
    WHILE                 reduce using rule 8 (Stmt)
    IDENT                 reduce using rule 8 (Stmt)


State 17

   10 Decl: FLOAT IDENT •

    SEMICOLON  reduce using rule 10 (Decl)


State 18

    9 Decl: INT IDENT •

    SEMICOLON  reduce using rule 9 (Decl)


State 19

   12 Decl: CHAR IDENT •

    SEMICOLON  reduce using rule 12 (Decl)


State 20

   11 Decl: BOOLEAN IDENT •

    SEMICOLON  reduce using rule 11 (Decl)


State 21

   51 IfStmt: IF OPEN_PARENTHESIS • CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS
   52       | IF OPEN_PARENTHESIS • CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    NOT               shift, and go to state 36
    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr      go to state 46
    Term      go to state 47
    Factor    go to state 48
    CondExpr  go to state 49


State 22

   53 LoopStmt: FOR OPEN_PARENTHESIS • Assi SEMICOLON CondExpr SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    IDENT  shift, and go to state 8

    Assi  go to state 50


State 23

   54 LoopStmt: WHILE OPEN_PARENTHESIS • CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    NOT               shift, and go to state 36
    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr      go to state 46
    Term      go to state 47
    Factor    go to state 48
    CondExpr  go to state 51


State 24

   13 Assi: IDENT EQUAL • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 53
    Term    go to state 47
    Factor  go to state 48


State 25

   14 Assi: IDENT INC •

    CLOSE_PARENTHESIS  reduce using rule 14 (Assi)
    SEMICOLON          reduce using rule 14 (Assi)


State 26

   16 Assi: IDENT PLUS_EQUAL • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 54
    Term    go to state 47
    Factor  go to state 48


State 27

   15 Assi: IDENT DEC •

    CLOSE_PARENTHESIS  reduce using rule 15 (Assi)
    SEMICOLON          reduce using rule 15 (Assi)


State 28

   17 Assi: IDENT MINUS_EQUAL • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 55
    Term    go to state 47
    Factor  go to state 48


State 29

   19 Assi: IDENT DIVIDE_EQUAL • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 56
    Term    go to state 47
    Factor  go to state 48


State 30

   18 Assi: IDENT MULTIPLY_EQUAL • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 57
    Term    go to state 47
    Factor  go to state 48


State 31

   20 Assi: IDENT MODULO_EQUAL • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 58
    Term    go to state 47
    Factor  go to state 48


State 32

    0 $accept: PROGRAM $end •

    $default  accept


State 33

    3 StmtList: Stmt StmtList •

    $end                  reduce using rule 3 (StmtList)
    CLOSE_CURLY_BRACKETS  reduce using rule 3 (StmtList)


State 34

    5 Stmt: Decl SEMICOLON •

    $end                  reduce using rule 5 (Stmt)
    CLOSE_CURLY_BRACKETS  reduce using rule 5 (Stmt)
    FLOAT                 reduce using rule 5 (Stmt)
    INT                   reduce using rule 5 (Stmt)
    CHAR                  reduce using rule 5 (Stmt)
    BOOLEAN               reduce using rule 5 (Stmt)
    IF                    reduce using rule 5 (Stmt)
    FOR                   reduce using rule 5 (Stmt)
    WHILE                 reduce using rule 5 (Stmt)
    IDENT                 reduce using rule 5 (Stmt)


State 35

    6 Stmt: Assi SEMICOLON •

    $end                  reduce using rule 6 (Stmt)
    CLOSE_CURLY_BRACKETS  reduce using rule 6 (Stmt)
    FLOAT                 reduce using rule 6 (Stmt)
    INT                   reduce using rule 6 (Stmt)
    CHAR                  reduce using rule 6 (Stmt)
    BOOLEAN               reduce using rule 6 (Stmt)
    IF                    reduce using rule 6 (Stmt)
    FOR                   reduce using rule 6 (Stmt)
    WHILE                 reduce using rule 6 (Stmt)
    IDENT                 reduce using rule 6 (Stmt)


State 36

   40 CondExpr: NOT • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 59
    Term    go to state 47
    Factor  go to state 48


State 37

   37 Factor: INC • IDENT

    IDENT  shift, and go to state 60


State 38

   38 Factor: DEC • IDENT

    IDENT  shift, and go to state 61


State 39

   28 Factor: OPEN_PARENTHESIS • Expr CLOSE_PARENTHESIS
   43 CondExpr: OPEN_PARENTHESIS • CondExpr CLOSE_PARENTHESIS

    NOT               shift, and go to state 36
    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr      go to state 62
    Term      go to state 47
    Factor    go to state 48
    CondExpr  go to state 63


State 40

   31 Factor: FLOAT_LITERAL •

    EQUAL_LESSER       reduce using rule 31 (Factor)
    GREATER_THAN       reduce using rule 31 (Factor)
    LESSER_THAN        reduce using rule 31 (Factor)
    EQUAL              reduce using rule 31 (Factor)
    IS_EQUAL           reduce using rule 31 (Factor)
    NOT_EQUAL          reduce using rule 31 (Factor)
    EQUAL_GREATER      reduce using rule 31 (Factor)
    PLUS               reduce using rule 31 (Factor)
    MINUS              reduce using rule 31 (Factor)
    DIVIDE             reduce using rule 31 (Factor)
    MULTIPLY           reduce using rule 31 (Factor)
    MODULO             reduce using rule 31 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 31 (Factor)
    AND                reduce using rule 31 (Factor)
    OR                 reduce using rule 31 (Factor)
    SEMICOLON          reduce using rule 31 (Factor)


State 41

   33 Factor: TRUE •

    EQUAL_LESSER       reduce using rule 33 (Factor)
    GREATER_THAN       reduce using rule 33 (Factor)
    LESSER_THAN        reduce using rule 33 (Factor)
    EQUAL              reduce using rule 33 (Factor)
    IS_EQUAL           reduce using rule 33 (Factor)
    NOT_EQUAL          reduce using rule 33 (Factor)
    EQUAL_GREATER      reduce using rule 33 (Factor)
    PLUS               reduce using rule 33 (Factor)
    MINUS              reduce using rule 33 (Factor)
    DIVIDE             reduce using rule 33 (Factor)
    MULTIPLY           reduce using rule 33 (Factor)
    MODULO             reduce using rule 33 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 33 (Factor)
    AND                reduce using rule 33 (Factor)
    OR                 reduce using rule 33 (Factor)
    SEMICOLON          reduce using rule 33 (Factor)


State 42

   34 Factor: FALSE •

    EQUAL_LESSER       reduce using rule 34 (Factor)
    GREATER_THAN       reduce using rule 34 (Factor)
    LESSER_THAN        reduce using rule 34 (Factor)
    EQUAL              reduce using rule 34 (Factor)
    IS_EQUAL           reduce using rule 34 (Factor)
    NOT_EQUAL          reduce using rule 34 (Factor)
    EQUAL_GREATER      reduce using rule 34 (Factor)
    PLUS               reduce using rule 34 (Factor)
    MINUS              reduce using rule 34 (Factor)
    DIVIDE             reduce using rule 34 (Factor)
    MULTIPLY           reduce using rule 34 (Factor)
    MODULO             reduce using rule 34 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 34 (Factor)
    AND                reduce using rule 34 (Factor)
    OR                 reduce using rule 34 (Factor)
    SEMICOLON          reduce using rule 34 (Factor)


State 43

   30 Factor: INT_LITERAL •

    EQUAL_LESSER       reduce using rule 30 (Factor)
    GREATER_THAN       reduce using rule 30 (Factor)
    LESSER_THAN        reduce using rule 30 (Factor)
    EQUAL              reduce using rule 30 (Factor)
    IS_EQUAL           reduce using rule 30 (Factor)
    NOT_EQUAL          reduce using rule 30 (Factor)
    EQUAL_GREATER      reduce using rule 30 (Factor)
    PLUS               reduce using rule 30 (Factor)
    MINUS              reduce using rule 30 (Factor)
    DIVIDE             reduce using rule 30 (Factor)
    MULTIPLY           reduce using rule 30 (Factor)
    MODULO             reduce using rule 30 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 30 (Factor)
    AND                reduce using rule 30 (Factor)
    OR                 reduce using rule 30 (Factor)
    SEMICOLON          reduce using rule 30 (Factor)


State 44

   32 Factor: CHAR_LITERAL •

    EQUAL_LESSER       reduce using rule 32 (Factor)
    GREATER_THAN       reduce using rule 32 (Factor)
    LESSER_THAN        reduce using rule 32 (Factor)
    EQUAL              reduce using rule 32 (Factor)
    IS_EQUAL           reduce using rule 32 (Factor)
    NOT_EQUAL          reduce using rule 32 (Factor)
    EQUAL_GREATER      reduce using rule 32 (Factor)
    PLUS               reduce using rule 32 (Factor)
    MINUS              reduce using rule 32 (Factor)
    DIVIDE             reduce using rule 32 (Factor)
    MULTIPLY           reduce using rule 32 (Factor)
    MODULO             reduce using rule 32 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 32 (Factor)
    AND                reduce using rule 32 (Factor)
    OR                 reduce using rule 32 (Factor)
    SEMICOLON          reduce using rule 32 (Factor)


State 45

   29 Factor: IDENT •
   35       | IDENT • INC
   36       | IDENT • DEC

    INC  shift, and go to state 64
    DEC  shift, and go to state 65

    EQUAL_LESSER       reduce using rule 29 (Factor)
    GREATER_THAN       reduce using rule 29 (Factor)
    LESSER_THAN        reduce using rule 29 (Factor)
    EQUAL              reduce using rule 29 (Factor)
    IS_EQUAL           reduce using rule 29 (Factor)
    NOT_EQUAL          reduce using rule 29 (Factor)
    EQUAL_GREATER      reduce using rule 29 (Factor)
    PLUS               reduce using rule 29 (Factor)
    MINUS              reduce using rule 29 (Factor)
    DIVIDE             reduce using rule 29 (Factor)
    MULTIPLY           reduce using rule 29 (Factor)
    MODULO             reduce using rule 29 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 29 (Factor)
    AND                reduce using rule 29 (Factor)
    OR                 reduce using rule 29 (Factor)
    SEMICOLON          reduce using rule 29 (Factor)


State 46

   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term
   39 CondExpr: Expr • RelOp Expr
   41         | Expr • AND Expr
   42         | Expr • OR Expr

    EQUAL_LESSER   shift, and go to state 66
    GREATER_THAN   shift, and go to state 67
    LESSER_THAN    shift, and go to state 68
    EQUAL          shift, and go to state 69
    IS_EQUAL       shift, and go to state 70
    NOT_EQUAL      shift, and go to state 71
    EQUAL_GREATER  shift, and go to state 72
    PLUS           shift, and go to state 73
    MINUS          shift, and go to state 74
    AND            shift, and go to state 75
    OR             shift, and go to state 76

    RelOp  go to state 77


State 47

   23 Expr: Term •
   24 Term: Term • MULTIPLY Factor
   25     | Term • DIVIDE Factor
   26     | Term • MODULO Factor

    DIVIDE    shift, and go to state 78
    MULTIPLY  shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL_LESSER       reduce using rule 23 (Expr)
    GREATER_THAN       reduce using rule 23 (Expr)
    LESSER_THAN        reduce using rule 23 (Expr)
    EQUAL              reduce using rule 23 (Expr)
    IS_EQUAL           reduce using rule 23 (Expr)
    NOT_EQUAL          reduce using rule 23 (Expr)
    EQUAL_GREATER      reduce using rule 23 (Expr)
    PLUS               reduce using rule 23 (Expr)
    MINUS              reduce using rule 23 (Expr)
    CLOSE_PARENTHESIS  reduce using rule 23 (Expr)
    AND                reduce using rule 23 (Expr)
    OR                 reduce using rule 23 (Expr)
    SEMICOLON          reduce using rule 23 (Expr)


State 48

   27 Term: Factor •

    EQUAL_LESSER       reduce using rule 27 (Term)
    GREATER_THAN       reduce using rule 27 (Term)
    LESSER_THAN        reduce using rule 27 (Term)
    EQUAL              reduce using rule 27 (Term)
    IS_EQUAL           reduce using rule 27 (Term)
    NOT_EQUAL          reduce using rule 27 (Term)
    EQUAL_GREATER      reduce using rule 27 (Term)
    PLUS               reduce using rule 27 (Term)
    MINUS              reduce using rule 27 (Term)
    DIVIDE             reduce using rule 27 (Term)
    MULTIPLY           reduce using rule 27 (Term)
    MODULO             reduce using rule 27 (Term)
    CLOSE_PARENTHESIS  reduce using rule 27 (Term)
    AND                reduce using rule 27 (Term)
    OR                 reduce using rule 27 (Term)
    SEMICOLON          reduce using rule 27 (Term)


State 49

   51 IfStmt: IF OPEN_PARENTHESIS CondExpr • CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS
   52       | IF OPEN_PARENTHESIS CondExpr • CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    CLOSE_PARENTHESIS  shift, and go to state 81


State 50

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi • SEMICOLON CondExpr SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    SEMICOLON  shift, and go to state 82


State 51

   54 LoopStmt: WHILE OPEN_PARENTHESIS CondExpr • CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    CLOSE_PARENTHESIS  shift, and go to state 83


State 52

   28 Factor: OPEN_PARENTHESIS • Expr CLOSE_PARENTHESIS

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 84
    Term    go to state 47
    Factor  go to state 48


State 53

   13 Assi: IDENT EQUAL Expr •
   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 13 (Assi)
    SEMICOLON          reduce using rule 13 (Assi)


State 54

   16 Assi: IDENT PLUS_EQUAL Expr •
   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 16 (Assi)
    SEMICOLON          reduce using rule 16 (Assi)


State 55

   17 Assi: IDENT MINUS_EQUAL Expr •
   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 17 (Assi)
    SEMICOLON          reduce using rule 17 (Assi)


State 56

   19 Assi: IDENT DIVIDE_EQUAL Expr •
   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 19 (Assi)
    SEMICOLON          reduce using rule 19 (Assi)


State 57

   18 Assi: IDENT MULTIPLY_EQUAL Expr •
   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 18 (Assi)
    SEMICOLON          reduce using rule 18 (Assi)


State 58

   20 Assi: IDENT MODULO_EQUAL Expr •
   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 20 (Assi)
    SEMICOLON          reduce using rule 20 (Assi)


State 59

   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term
   40 CondExpr: NOT Expr •

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 40 (CondExpr)
    SEMICOLON          reduce using rule 40 (CondExpr)


State 60

   37 Factor: INC IDENT •

    EQUAL_LESSER       reduce using rule 37 (Factor)
    GREATER_THAN       reduce using rule 37 (Factor)
    LESSER_THAN        reduce using rule 37 (Factor)
    EQUAL              reduce using rule 37 (Factor)
    IS_EQUAL           reduce using rule 37 (Factor)
    NOT_EQUAL          reduce using rule 37 (Factor)
    EQUAL_GREATER      reduce using rule 37 (Factor)
    PLUS               reduce using rule 37 (Factor)
    MINUS              reduce using rule 37 (Factor)
    DIVIDE             reduce using rule 37 (Factor)
    MULTIPLY           reduce using rule 37 (Factor)
    MODULO             reduce using rule 37 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 37 (Factor)
    AND                reduce using rule 37 (Factor)
    OR                 reduce using rule 37 (Factor)
    SEMICOLON          reduce using rule 37 (Factor)


State 61

   38 Factor: DEC IDENT •

    EQUAL_LESSER       reduce using rule 38 (Factor)
    GREATER_THAN       reduce using rule 38 (Factor)
    LESSER_THAN        reduce using rule 38 (Factor)
    EQUAL              reduce using rule 38 (Factor)
    IS_EQUAL           reduce using rule 38 (Factor)
    NOT_EQUAL          reduce using rule 38 (Factor)
    EQUAL_GREATER      reduce using rule 38 (Factor)
    PLUS               reduce using rule 38 (Factor)
    MINUS              reduce using rule 38 (Factor)
    DIVIDE             reduce using rule 38 (Factor)
    MULTIPLY           reduce using rule 38 (Factor)
    MODULO             reduce using rule 38 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 38 (Factor)
    AND                reduce using rule 38 (Factor)
    OR                 reduce using rule 38 (Factor)
    SEMICOLON          reduce using rule 38 (Factor)


State 62

   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term
   28 Factor: OPEN_PARENTHESIS Expr • CLOSE_PARENTHESIS
   39 CondExpr: Expr • RelOp Expr
   41         | Expr • AND Expr
   42         | Expr • OR Expr

    EQUAL_LESSER       shift, and go to state 66
    GREATER_THAN       shift, and go to state 67
    LESSER_THAN        shift, and go to state 68
    EQUAL              shift, and go to state 69
    IS_EQUAL           shift, and go to state 70
    NOT_EQUAL          shift, and go to state 71
    EQUAL_GREATER      shift, and go to state 72
    PLUS               shift, and go to state 73
    MINUS              shift, and go to state 74
    CLOSE_PARENTHESIS  shift, and go to state 85
    AND                shift, and go to state 75
    OR                 shift, and go to state 76

    RelOp  go to state 77


State 63

   43 CondExpr: OPEN_PARENTHESIS CondExpr • CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 86


State 64

   35 Factor: IDENT INC •

    EQUAL_LESSER       reduce using rule 35 (Factor)
    GREATER_THAN       reduce using rule 35 (Factor)
    LESSER_THAN        reduce using rule 35 (Factor)
    EQUAL              reduce using rule 35 (Factor)
    IS_EQUAL           reduce using rule 35 (Factor)
    NOT_EQUAL          reduce using rule 35 (Factor)
    EQUAL_GREATER      reduce using rule 35 (Factor)
    PLUS               reduce using rule 35 (Factor)
    MINUS              reduce using rule 35 (Factor)
    DIVIDE             reduce using rule 35 (Factor)
    MULTIPLY           reduce using rule 35 (Factor)
    MODULO             reduce using rule 35 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 35 (Factor)
    AND                reduce using rule 35 (Factor)
    OR                 reduce using rule 35 (Factor)
    SEMICOLON          reduce using rule 35 (Factor)


State 65

   36 Factor: IDENT DEC •

    EQUAL_LESSER       reduce using rule 36 (Factor)
    GREATER_THAN       reduce using rule 36 (Factor)
    LESSER_THAN        reduce using rule 36 (Factor)
    EQUAL              reduce using rule 36 (Factor)
    IS_EQUAL           reduce using rule 36 (Factor)
    NOT_EQUAL          reduce using rule 36 (Factor)
    EQUAL_GREATER      reduce using rule 36 (Factor)
    PLUS               reduce using rule 36 (Factor)
    MINUS              reduce using rule 36 (Factor)
    DIVIDE             reduce using rule 36 (Factor)
    MULTIPLY           reduce using rule 36 (Factor)
    MODULO             reduce using rule 36 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 36 (Factor)
    AND                reduce using rule 36 (Factor)
    OR                 reduce using rule 36 (Factor)
    SEMICOLON          reduce using rule 36 (Factor)


State 66

   50 RelOp: EQUAL_LESSER •

    INC               reduce using rule 50 (RelOp)
    DEC               reduce using rule 50 (RelOp)
    OPEN_PARENTHESIS  reduce using rule 50 (RelOp)
    FLOAT_LITERAL     reduce using rule 50 (RelOp)
    TRUE              reduce using rule 50 (RelOp)
    FALSE             reduce using rule 50 (RelOp)
    INT_LITERAL       reduce using rule 50 (RelOp)
    CHAR_LITERAL      reduce using rule 50 (RelOp)
    IDENT             reduce using rule 50 (RelOp)


State 67

   47 RelOp: GREATER_THAN •

    INC               reduce using rule 47 (RelOp)
    DEC               reduce using rule 47 (RelOp)
    OPEN_PARENTHESIS  reduce using rule 47 (RelOp)
    FLOAT_LITERAL     reduce using rule 47 (RelOp)
    TRUE              reduce using rule 47 (RelOp)
    FALSE             reduce using rule 47 (RelOp)
    INT_LITERAL       reduce using rule 47 (RelOp)
    CHAR_LITERAL      reduce using rule 47 (RelOp)
    IDENT             reduce using rule 47 (RelOp)


State 68

   48 RelOp: LESSER_THAN •

    INC               reduce using rule 48 (RelOp)
    DEC               reduce using rule 48 (RelOp)
    OPEN_PARENTHESIS  reduce using rule 48 (RelOp)
    FLOAT_LITERAL     reduce using rule 48 (RelOp)
    TRUE              reduce using rule 48 (RelOp)
    FALSE             reduce using rule 48 (RelOp)
    INT_LITERAL       reduce using rule 48 (RelOp)
    CHAR_LITERAL      reduce using rule 48 (RelOp)
    IDENT             reduce using rule 48 (RelOp)


State 69

   44 RelOp: EQUAL •

    INC               reduce using rule 44 (RelOp)
    DEC               reduce using rule 44 (RelOp)
    OPEN_PARENTHESIS  reduce using rule 44 (RelOp)
    FLOAT_LITERAL     reduce using rule 44 (RelOp)
    TRUE              reduce using rule 44 (RelOp)
    FALSE             reduce using rule 44 (RelOp)
    INT_LITERAL       reduce using rule 44 (RelOp)
    CHAR_LITERAL      reduce using rule 44 (RelOp)
    IDENT             reduce using rule 44 (RelOp)


State 70

   45 RelOp: IS_EQUAL •

    INC               reduce using rule 45 (RelOp)
    DEC               reduce using rule 45 (RelOp)
    OPEN_PARENTHESIS  reduce using rule 45 (RelOp)
    FLOAT_LITERAL     reduce using rule 45 (RelOp)
    TRUE              reduce using rule 45 (RelOp)
    FALSE             reduce using rule 45 (RelOp)
    INT_LITERAL       reduce using rule 45 (RelOp)
    CHAR_LITERAL      reduce using rule 45 (RelOp)
    IDENT             reduce using rule 45 (RelOp)


State 71

   46 RelOp: NOT_EQUAL •

    INC               reduce using rule 46 (RelOp)
    DEC               reduce using rule 46 (RelOp)
    OPEN_PARENTHESIS  reduce using rule 46 (RelOp)
    FLOAT_LITERAL     reduce using rule 46 (RelOp)
    TRUE              reduce using rule 46 (RelOp)
    FALSE             reduce using rule 46 (RelOp)
    INT_LITERAL       reduce using rule 46 (RelOp)
    CHAR_LITERAL      reduce using rule 46 (RelOp)
    IDENT             reduce using rule 46 (RelOp)


State 72

   49 RelOp: EQUAL_GREATER •

    INC               reduce using rule 49 (RelOp)
    DEC               reduce using rule 49 (RelOp)
    OPEN_PARENTHESIS  reduce using rule 49 (RelOp)
    FLOAT_LITERAL     reduce using rule 49 (RelOp)
    TRUE              reduce using rule 49 (RelOp)
    FALSE             reduce using rule 49 (RelOp)
    INT_LITERAL       reduce using rule 49 (RelOp)
    CHAR_LITERAL      reduce using rule 49 (RelOp)
    IDENT             reduce using rule 49 (RelOp)


State 73

   21 Expr: Expr PLUS • Term

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Term    go to state 87
    Factor  go to state 48


State 74

   22 Expr: Expr MINUS • Term

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Term    go to state 88
    Factor  go to state 48


State 75

   41 CondExpr: Expr AND • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 89
    Term    go to state 47
    Factor  go to state 48


State 76

   42 CondExpr: Expr OR • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 90
    Term    go to state 47
    Factor  go to state 48


State 77

   39 CondExpr: Expr RelOp • Expr

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr    go to state 91
    Term    go to state 47
    Factor  go to state 48


State 78

   25 Term: Term DIVIDE • Factor

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Factor  go to state 92


State 79

   24 Term: Term MULTIPLY • Factor

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Factor  go to state 93


State 80

   26 Term: Term MODULO • Factor

    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 52
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Factor  go to state 94


State 81

   51 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS • OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS
   52       | IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS • OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    OPEN_CURLY_BRACKETS  shift, and go to state 95


State 82

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON • CondExpr SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    NOT               shift, and go to state 36
    INC               shift, and go to state 37
    DEC               shift, and go to state 38
    OPEN_PARENTHESIS  shift, and go to state 39
    FLOAT_LITERAL     shift, and go to state 40
    TRUE              shift, and go to state 41
    FALSE             shift, and go to state 42
    INT_LITERAL       shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    IDENT             shift, and go to state 45

    Expr      go to state 46
    Term      go to state 47
    Factor    go to state 48
    CondExpr  go to state 96


State 83

   54 LoopStmt: WHILE OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS • OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    OPEN_CURLY_BRACKETS  shift, and go to state 97


State 84

   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term
   28 Factor: OPEN_PARENTHESIS Expr • CLOSE_PARENTHESIS

    PLUS               shift, and go to state 73
    MINUS              shift, and go to state 74
    CLOSE_PARENTHESIS  shift, and go to state 85


State 85

   28 Factor: OPEN_PARENTHESIS Expr CLOSE_PARENTHESIS •

    EQUAL_LESSER       reduce using rule 28 (Factor)
    GREATER_THAN       reduce using rule 28 (Factor)
    LESSER_THAN        reduce using rule 28 (Factor)
    EQUAL              reduce using rule 28 (Factor)
    IS_EQUAL           reduce using rule 28 (Factor)
    NOT_EQUAL          reduce using rule 28 (Factor)
    EQUAL_GREATER      reduce using rule 28 (Factor)
    PLUS               reduce using rule 28 (Factor)
    MINUS              reduce using rule 28 (Factor)
    DIVIDE             reduce using rule 28 (Factor)
    MULTIPLY           reduce using rule 28 (Factor)
    MODULO             reduce using rule 28 (Factor)
    CLOSE_PARENTHESIS  reduce using rule 28 (Factor)
    AND                reduce using rule 28 (Factor)
    OR                 reduce using rule 28 (Factor)
    SEMICOLON          reduce using rule 28 (Factor)


State 86

   43 CondExpr: OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS •

    CLOSE_PARENTHESIS  reduce using rule 43 (CondExpr)
    SEMICOLON          reduce using rule 43 (CondExpr)


State 87

   21 Expr: Expr PLUS Term •
   24 Term: Term • MULTIPLY Factor
   25     | Term • DIVIDE Factor
   26     | Term • MODULO Factor

    DIVIDE    shift, and go to state 78
    MULTIPLY  shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL_LESSER       reduce using rule 21 (Expr)
    GREATER_THAN       reduce using rule 21 (Expr)
    LESSER_THAN        reduce using rule 21 (Expr)
    EQUAL              reduce using rule 21 (Expr)
    IS_EQUAL           reduce using rule 21 (Expr)
    NOT_EQUAL          reduce using rule 21 (Expr)
    EQUAL_GREATER      reduce using rule 21 (Expr)
    PLUS               reduce using rule 21 (Expr)
    MINUS              reduce using rule 21 (Expr)
    CLOSE_PARENTHESIS  reduce using rule 21 (Expr)
    AND                reduce using rule 21 (Expr)
    OR                 reduce using rule 21 (Expr)
    SEMICOLON          reduce using rule 21 (Expr)


State 88

   22 Expr: Expr MINUS Term •
   24 Term: Term • MULTIPLY Factor
   25     | Term • DIVIDE Factor
   26     | Term • MODULO Factor

    DIVIDE    shift, and go to state 78
    MULTIPLY  shift, and go to state 79
    MODULO    shift, and go to state 80

    EQUAL_LESSER       reduce using rule 22 (Expr)
    GREATER_THAN       reduce using rule 22 (Expr)
    LESSER_THAN        reduce using rule 22 (Expr)
    EQUAL              reduce using rule 22 (Expr)
    IS_EQUAL           reduce using rule 22 (Expr)
    NOT_EQUAL          reduce using rule 22 (Expr)
    EQUAL_GREATER      reduce using rule 22 (Expr)
    PLUS               reduce using rule 22 (Expr)
    MINUS              reduce using rule 22 (Expr)
    CLOSE_PARENTHESIS  reduce using rule 22 (Expr)
    AND                reduce using rule 22 (Expr)
    OR                 reduce using rule 22 (Expr)
    SEMICOLON          reduce using rule 22 (Expr)


State 89

   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term
   41 CondExpr: Expr AND Expr •

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 41 (CondExpr)
    SEMICOLON          reduce using rule 41 (CondExpr)


State 90

   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term
   42 CondExpr: Expr OR Expr •

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 42 (CondExpr)
    SEMICOLON          reduce using rule 42 (CondExpr)


State 91

   21 Expr: Expr • PLUS Term
   22     | Expr • MINUS Term
   39 CondExpr: Expr RelOp Expr •

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    CLOSE_PARENTHESIS  reduce using rule 39 (CondExpr)
    SEMICOLON          reduce using rule 39 (CondExpr)


State 92

   25 Term: Term DIVIDE Factor •

    EQUAL_LESSER       reduce using rule 25 (Term)
    GREATER_THAN       reduce using rule 25 (Term)
    LESSER_THAN        reduce using rule 25 (Term)
    EQUAL              reduce using rule 25 (Term)
    IS_EQUAL           reduce using rule 25 (Term)
    NOT_EQUAL          reduce using rule 25 (Term)
    EQUAL_GREATER      reduce using rule 25 (Term)
    PLUS               reduce using rule 25 (Term)
    MINUS              reduce using rule 25 (Term)
    DIVIDE             reduce using rule 25 (Term)
    MULTIPLY           reduce using rule 25 (Term)
    MODULO             reduce using rule 25 (Term)
    CLOSE_PARENTHESIS  reduce using rule 25 (Term)
    AND                reduce using rule 25 (Term)
    OR                 reduce using rule 25 (Term)
    SEMICOLON          reduce using rule 25 (Term)


State 93

   24 Term: Term MULTIPLY Factor •

    EQUAL_LESSER       reduce using rule 24 (Term)
    GREATER_THAN       reduce using rule 24 (Term)
    LESSER_THAN        reduce using rule 24 (Term)
    EQUAL              reduce using rule 24 (Term)
    IS_EQUAL           reduce using rule 24 (Term)
    NOT_EQUAL          reduce using rule 24 (Term)
    EQUAL_GREATER      reduce using rule 24 (Term)
    PLUS               reduce using rule 24 (Term)
    MINUS              reduce using rule 24 (Term)
    DIVIDE             reduce using rule 24 (Term)
    MULTIPLY           reduce using rule 24 (Term)
    MODULO             reduce using rule 24 (Term)
    CLOSE_PARENTHESIS  reduce using rule 24 (Term)
    AND                reduce using rule 24 (Term)
    OR                 reduce using rule 24 (Term)
    SEMICOLON          reduce using rule 24 (Term)


State 94

   26 Term: Term MODULO Factor •

    EQUAL_LESSER       reduce using rule 26 (Term)
    GREATER_THAN       reduce using rule 26 (Term)
    LESSER_THAN        reduce using rule 26 (Term)
    EQUAL              reduce using rule 26 (Term)
    IS_EQUAL           reduce using rule 26 (Term)
    NOT_EQUAL          reduce using rule 26 (Term)
    EQUAL_GREATER      reduce using rule 26 (Term)
    PLUS               reduce using rule 26 (Term)
    MINUS              reduce using rule 26 (Term)
    DIVIDE             reduce using rule 26 (Term)
    MULTIPLY           reduce using rule 26 (Term)
    MODULO             reduce using rule 26 (Term)
    CLOSE_PARENTHESIS  reduce using rule 26 (Term)
    AND                reduce using rule 26 (Term)
    OR                 reduce using rule 26 (Term)
    SEMICOLON          reduce using rule 26 (Term)


State 95

   51 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS • StmtList CLOSE_CURLY_BRACKETS
   52       | IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS • StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    FLOAT    shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    IF       shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IDENT    shift, and go to state 8

    CLOSE_CURLY_BRACKETS  reduce using rule 4 (StmtList)

    StmtList  go to state 98
    Stmt      go to state 12
    Decl      go to state 13
    Assi      go to state 14
    IfStmt    go to state 15
    LoopStmt  go to state 16


State 96

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON CondExpr • SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    SEMICOLON  shift, and go to state 99


State 97

   54 LoopStmt: WHILE OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS • StmtList CLOSE_CURLY_BRACKETS

    FLOAT    shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    IF       shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IDENT    shift, and go to state 8

    CLOSE_CURLY_BRACKETS  reduce using rule 4 (StmtList)

    StmtList  go to state 100
    Stmt      go to state 12
    Decl      go to state 13
    Assi      go to state 14
    IfStmt    go to state 15
    LoopStmt  go to state 16


State 98

   51 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList • CLOSE_CURLY_BRACKETS
   52       | IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList • CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    CLOSE_CURLY_BRACKETS  shift, and go to state 101


State 99

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON CondExpr SEMICOLON • Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    IDENT  shift, and go to state 8

    Assi  go to state 102


State 100

   54 LoopStmt: WHILE OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList • CLOSE_CURLY_BRACKETS

    CLOSE_CURLY_BRACKETS  shift, and go to state 103


State 101

   51 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS •
   52       | IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS • ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    ELSE  shift, and go to state 104

    $end                  reduce using rule 51 (IfStmt)
    CLOSE_CURLY_BRACKETS  reduce using rule 51 (IfStmt)
    FLOAT                 reduce using rule 51 (IfStmt)
    INT                   reduce using rule 51 (IfStmt)
    CHAR                  reduce using rule 51 (IfStmt)
    BOOLEAN               reduce using rule 51 (IfStmt)
    IF                    reduce using rule 51 (IfStmt)
    FOR                   reduce using rule 51 (IfStmt)
    WHILE                 reduce using rule 51 (IfStmt)
    IDENT                 reduce using rule 51 (IfStmt)


State 102

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON CondExpr SEMICOLON Assi • CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    CLOSE_PARENTHESIS  shift, and go to state 105


State 103

   54 LoopStmt: WHILE OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS •

    $end                  reduce using rule 54 (LoopStmt)
    CLOSE_CURLY_BRACKETS  reduce using rule 54 (LoopStmt)
    FLOAT                 reduce using rule 54 (LoopStmt)
    INT                   reduce using rule 54 (LoopStmt)
    CHAR                  reduce using rule 54 (LoopStmt)
    BOOLEAN               reduce using rule 54 (LoopStmt)
    IF                    reduce using rule 54 (LoopStmt)
    FOR                   reduce using rule 54 (LoopStmt)
    WHILE                 reduce using rule 54 (LoopStmt)
    IDENT                 reduce using rule 54 (LoopStmt)


State 104

   52 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE • OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    OPEN_CURLY_BRACKETS  shift, and go to state 106


State 105

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON CondExpr SEMICOLON Assi CLOSE_PARENTHESIS • OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS

    OPEN_CURLY_BRACKETS  shift, and go to state 107


State 106

   52 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS • StmtList CLOSE_CURLY_BRACKETS

    FLOAT    shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    IF       shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IDENT    shift, and go to state 8

    CLOSE_CURLY_BRACKETS  reduce using rule 4 (StmtList)

    StmtList  go to state 108
    Stmt      go to state 12
    Decl      go to state 13
    Assi      go to state 14
    IfStmt    go to state 15
    LoopStmt  go to state 16


State 107

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON CondExpr SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS • StmtList CLOSE_CURLY_BRACKETS

    FLOAT    shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    IF       shift, and go to state 5
    FOR      shift, and go to state 6
    WHILE    shift, and go to state 7
    IDENT    shift, and go to state 8

    CLOSE_CURLY_BRACKETS  reduce using rule 4 (StmtList)

    StmtList  go to state 109
    Stmt      go to state 12
    Decl      go to state 13
    Assi      go to state 14
    IfStmt    go to state 15
    LoopStmt  go to state 16


State 108

   52 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList • CLOSE_CURLY_BRACKETS

    CLOSE_CURLY_BRACKETS  shift, and go to state 110


State 109

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON CondExpr SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList • CLOSE_CURLY_BRACKETS

    CLOSE_CURLY_BRACKETS  shift, and go to state 111


State 110

   52 IfStmt: IF OPEN_PARENTHESIS CondExpr CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS ELSE OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS •

    $end                  reduce using rule 52 (IfStmt)
    CLOSE_CURLY_BRACKETS  reduce using rule 52 (IfStmt)
    FLOAT                 reduce using rule 52 (IfStmt)
    INT                   reduce using rule 52 (IfStmt)
    CHAR                  reduce using rule 52 (IfStmt)
    BOOLEAN               reduce using rule 52 (IfStmt)
    IF                    reduce using rule 52 (IfStmt)
    FOR                   reduce using rule 52 (IfStmt)
    WHILE                 reduce using rule 52 (IfStmt)
    IDENT                 reduce using rule 52 (IfStmt)


State 111

   53 LoopStmt: FOR OPEN_PARENTHESIS Assi SEMICOLON CondExpr SEMICOLON Assi CLOSE_PARENTHESIS OPEN_CURLY_BRACKETS StmtList CLOSE_CURLY_BRACKETS •

    $end                  reduce using rule 53 (LoopStmt)
    CLOSE_CURLY_BRACKETS  reduce using rule 53 (LoopStmt)
    FLOAT                 reduce using rule 53 (LoopStmt)
    INT                   reduce using rule 53 (LoopStmt)
    CHAR                  reduce using rule 53 (LoopStmt)
    BOOLEAN               reduce using rule 53 (LoopStmt)
    IF                    reduce using rule 53 (LoopStmt)
    FOR                   reduce using rule 53 (LoopStmt)
    WHILE                 reduce using rule 53 (LoopStmt)
    IDENT                 reduce using rule 53 (LoopStmt)
